---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/postgresql.cnpg.io/cluster_v1.json
apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: immich-database
spec:
  instances: 3
  imageName: ghcr.io/tensorchord/cloudnative-pgvecto.rs:16.4
  primaryUpdateStrategy: unsupervised
  enablePDB: true

  storage:
    size: 10Gi  # this is not enforced because we're using a hostpath storage class
    storageClass: openebs-hostpath

  superuserSecret:
    name: cloudnative-pg-secret

  enableSuperuserAccess: true

  postgresql:
    shared_preload_libraries:
      - "vectors.so"
    parameters:
      max_connections: "100"
      shared_buffers: 256MB

  resources:
    requests:
      cpu: 20m
      memory: 512Mi
    limits:
      memory: 4Gi

  monitoring:
    enablePodMonitor: true

  backup:
    retentionPolicy: 30d
    barmanObjectStore: &barmanObjectStore
      data:
        compression: bzip2
      wal:
        compression: bzip2
        maxParallel: 8
      destinationPath: s3://cloudnative-pg/
      endpointURL: http://truenas.lan:9000
      # Note: serverName version needs to be incremented
      # when recovering from an existing cnpg cluster
      serverName: &currentCluster immich-database
      s3Credentials:
        accessKeyId:
          name: cloudnative-pg-secret
          key: aws-access-key-id
        secretAccessKey:
          name: cloudnative-pg-secret
          key: aws-secret-access-key
  # Note: previousCluster needs to be set to the name of the previous
  # cluster when recovering from an existing cnpg cluster
  bootstrap:
    initdb:
      database: immich
      owner: immich
      secret:
        name: immich-database-secret
      dataChecksums: true
      postInitApplicationSQL:
        - ALTER SYSTEM SET search_path TO "$user", public, vectors;
        - SET search_path TO "$user", public, vectors;
        - CREATE EXTENSION IF NOT EXISTS "vectors";
        - ALTER SCHEMA vectors OWNER TO "immich";
        - GRANT ALL PRIVILEGES ON ALL TABLES IN SCHEMA vectors TO "immich";
        - GRANT ALL PRIVILEGES ON ALL TABLES IN SCHEMA public TO "immich";
        - CREATE EXTENSION IF NOT EXISTS cube WITH SCHEMA public;
        - CREATE EXTENSION IF NOT EXISTS earthdistance WITH SCHEMA public;
  #   recovery:
  #     source: &previousCluster immich-database
  # Note: externalClusters is needed when recovering from an existing cnpg cluster
  # externalClusters:
  #   - name: *previousCluster
  #     barmanObjectStore:
  #       <<: *barmanObjectStore
  #       serverName: *previousCluster
