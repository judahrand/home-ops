---
# yaml-language-server: $schema=https://kube-schemas.pages.dev/source.toolkit.fluxcd.io/ocirepository_v1beta2.json
apiVersion: source.toolkit.fluxcd.io/v1beta2
kind: OCIRepository
metadata:
  name: authentik
spec:
  interval: 1h
  layerSelector:
    mediaType: application/vnd.cncf.helm.chart.content.v1.tar+gzip
    operation: copy
  ref:
    tag: 2025.2.3
  url: oci://ghcr.io/goauthentik/helm-charts/authentik
---
# yaml-language-server: $schema=https://kube-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app authentik
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: authentik
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  values:
    global:
      podAnnotations:
        secret.reloader.stakater.com/reload: authentik-secret
      deploymentStrategy:
        type: RollingUpdate
      env:
        - name: AUTHENTIK_POSTGRESQL__NAME
          value: *app
        - name: AUTHENTIK_POSTGRESQL__USE_PGBOUNCER
          value: "true"
        - name: AUTHENTIK_POSTGRESQL__SSLMODE
          value: require
      envFrom: &envFrom
        - secretRef:
            name: authentik-secret

    # authentik:
    #   redis:
    #     host: authentik-dragonfly

    server:
      initContainers:
        - name: init-db
          image: ghcr.io/home-operations/postgres-init:17.4
          envFrom: *envFrom
      autoscaling:
        enabled: true
        minReplicas: 1
      resources:
        requests:
          cpu: 200m
        limits:
          memory: 1Gi
      metrics:
        prometheus:
          serviceMonitor:
            enabled: true
      ingress:
        enabled: true
        annotations:
          external-dns.alpha.kubernetes.io/target: internal.judahrand.net
        ingressClassName: internal
        hosts:
          - authentik.judahrand.net

    worker:
      autoscaling:
        enabled: true
        minReplicas: 1
      resources:
        requests:
          cpu: 200m
        limits:
          memory: 1Gi

    redis:
      enabled: true
      architecture: standalone
