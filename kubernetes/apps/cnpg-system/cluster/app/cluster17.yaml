---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/postgresql.cnpg.io/cluster_v1.json
apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: postgres17
spec:
  instances: 3
  imageName: ghcr.io/cloudnative-pg/postgresql:17.4-14@sha256:3c0ba08ea353c9705a755c113e4ae395be76553e0ed68076e5410cb09b9d17d9
  primaryUpdateStrategy: unsupervised
  enablePDB: true

  storage:
    size: 20Gi  # this is not enforced because we're using a hostpath storage class
    storageClass: openebs-hostpath

  superuserSecret:
    name: cloudnative-pg-secret

  enableSuperuserAccess: true

  postgresql:
    parameters:
      max_connections: "400"
      shared_buffers: 256MB

  managed:
    roles:
      - name: authentik
        ensure: present
        login: true
        superuser: false
        inRoles: []
        passwordSecret:
          name: cloudnative-pg-authentik-secret
      - name: homeassistant
        ensure: present
        login: true
        superuser: false
        inRoles: []
        passwordSecret:
          name: cloudnative-pg-homeassistant-secret
      - name: kyoo
        ensure: present
        login: true
        superuser: false
        inRoles: []
        passwordSecret:
          name: cloudnative-pg-kyoo-secret
      - name: vikunja
        ensure: present
        login: true
        superuser: false
        inRoles: []
        passwordSecret:
          name: cloudnative-pg-vikunja-secret

  resources:
    requests:
      cpu: 20m
      memory: 512Mi
    limits:
      memory: 4Gi

  monitoring:
    enablePodMonitor: true

  backup:
    retentionPolicy: 30d
    barmanObjectStore: &barmanObjectStore
      data:
        compression: bzip2
      wal:
        compression: bzip2
        maxParallel: 8
      destinationPath: s3://cloudnative-pg/
      endpointURL: http://truenas.servers:9000
      # Note: serverName version needs to be incremented
      # when recovering from an existing cnpg cluster
      serverName: &currentCluster postgres17-v1
      s3Credentials:
        accessKeyId:
          name: cloudnative-pg-secret
          key: aws-access-key-id
        secretAccessKey:
          name: cloudnative-pg-secret
          key: aws-secret-access-key
  # Note: previousCluster needs to be set to the name of the previous
  # cluster when recovering from an existing cnpg cluster
  # bootstrap:
  #   recovery:
  #     source: &previousCluster postgres17-v1
  # # Note: externalClusters is needed when recovering from an existing cnpg cluster
  # externalClusters:
  #   - name: *previousCluster
  #     barmanObjectStore:
  #       <<: *barmanObjectStore
  #       serverName: *previousCluster
